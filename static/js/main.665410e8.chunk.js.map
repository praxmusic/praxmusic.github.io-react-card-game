{"version":3,"sources":["Components/Card.js","Components/Board.js","Components/Deck.js","Components/Navbar.js","Components/Attempts.js","Components/EndGame.js","App.js","reportWebVitals.js","index.js"],"names":["Card","endgame","disabled","handleClick","id","type","flipped","solved","style","display","className","onClick","Board","cards","map","card","includes","initializeDeck","array","_array","slice","i","length","randomIndex","Math","floor","random","temp","shuffle","reduce","acc","push","Navbar","setEndGame","setCards","setFails","fails","setFlipped","setDisabled","setSolved","document","getElementById","background","Attempts","EndGame","result","App","useState","useEffect","resetCards","sameCardClicked","isMatch","clickedCard","find","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.665410e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css'\r\n\r\nconst Card = ({ endgame, disabled, handleClick, id, type, flipped, solved }) => {\r\n  return(\r\n    <div \r\n    style={{display: endgame ? \"none\" : \"block\"}}\r\n    className={ `${flipped || solved ? type : 'card'}` }\r\n    onClick={() => disabled ? null : handleClick(id)} >\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\nimport './Board.css'\r\n\r\nconst Board = ({ endgame, disabled, cards, flipped, solved, handleClick }) => {\r\n\r\n  return (\r\n    <div id=\"brd\" className=\"board\">\r\n      {\r\n        cards.map(card => \r\n          <Card \r\n          key={card.id}\r\n          id={card.id}  \r\n          type={card.type}\r\n          flipped={flipped.includes(card.id)}\r\n          solved={solved.includes(card.id)}\r\n          handleClick={handleClick}\r\n          disabled={disabled || solved.includes(card.id)}\r\n          endgame={endgame}\r\n          />\r\n        )\r\n      }\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Board; ","const shuffle = (array) => {\r\n    const _array = array.slice(0)\r\n\r\n    for (let i = 0; i < array.length -1; i++){\r\n        let randomIndex = Math.floor(Math.random() * (i + 1))\r\n        let temp = _array[i]\r\n        _array[i] = _array[randomIndex]\r\n        _array[randomIndex] = temp\r\n    }\r\n    return _array\r\n}\r\n\r\nconst initializeDeck = () => {\r\nlet id = 0\r\nconst cards = ['magenta', 'lime', 'blue', 'yellow', 'red', 'orange'].reduce((acc, type) => {\r\n    acc.push({\r\n        id: id++,\r\n        type \r\n    })\r\n    acc.push({\r\n        id: id++,\r\n        type \r\n    })\r\n    return acc\r\n}, [])\r\n\r\n    return shuffle(cards)\r\n}\r\n\r\nexport default initializeDeck;","import React from 'react';\r\nimport './Navbar.css';\r\nimport shuffle from './Deck'\r\n\r\nfunction Navbar({ setEndGame, cards, setCards, fails, setFails, setFlipped, setDisabled, setSolved }){\r\n    \r\n    //function to reset the game\r\n    const NewGame = () => {\r\n        setFlipped([])\r\n        setSolved([])\r\n        setDisabled(false)\r\n        setFails(fails = 0)\r\n        setCards(shuffle(cards))\r\n        setEndGame(false)\r\n        document.getElementById('brd').className = 'board'\r\n        document.getElementById('nav').style.background = 'black';\r\n    }\r\n\r\n    return (\r\n        <div id=\"nav\" className=\"nav\">\r\n            <div className=\"nav-containerS\">\r\n            <header className=\"title\">Match The Cards</header>\r\n            <button className=\"newgame\" onClick={NewGame}>New Game</button>\r\n            </div>\r\n\r\n                {/* possible added features */}\r\n\r\n            {/* <div className=\"dropdown\">\r\n                <button className=\"dropbtn\">Difficulty \r\n                <i className=\"fa fa-caret-down\"></i>\r\n                </button>\r\n                <div className=\"dropdown-content\">\r\n                <option onClick={easyGame} value=\"easy\">Easy</option>\r\n                <option onClick={normalGame} value=\"normal\">Normal</option>\r\n                <option onClick={hardGame} value=\"hard\">Hard</option>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Navbar;\r\n\r\n","import React from 'react';\r\nimport './Attempts.css' \r\n\r\n\r\nconst Attempts = ({ fails, endgame }) => {   \r\n    if (fails <= 4) {\r\n        return <h1 id='atmpt' className='attempt'>Attempts: {fails}/4</h1>\r\n    } else if (fails > 4 ){\r\n        return <h1 className='attempt-loss'>Loss</h1>\r\n    } else if (endgame && fails < 4) {\r\n        return <h1 className='attempt-win'>Win</h1>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Attempts;","\r\nimport './Board.css'\r\nimport './Navbar.css'\r\nimport './Attempts'\r\n\r\n\r\nconst EndGame = (result) => {\r\n    \r\n    if (result === 'win'){\r\n        document.getElementById('brd').className = 'winboard';\r\n        document.getElementById('nav').style.background = 'rgb(128 197 228)';\r\n    } else if (result === 'lose'){\r\n        document.getElementById('brd').className = 'loseboard';\r\n        document.getElementById('nav').style.background = 'rgb(173 16 16)';\r\n    }\r\n}\r\n\r\nexport default EndGame; ","import React, { useState, useEffect } from 'react'\nimport './App.css'\n\n//Components\nimport Board from './Components/Board'\nimport Navbar from './Components/Navbar'\nimport Attempts from './Components/Attempts'\nimport initializeDeck from './Components/Deck.js'\nimport EndGame from './Components/EndGame'\n\n\nconst App = () => {\n\n  //state\n  const [cards, setCards] = useState([])\n  const [flipped, setFlipped] = useState([])\n  const [solved, setSolved] = useState([])\n  const [disabled, setDisabled] = useState(false)\n  const [fails, setFails] = useState(0);\n  const [endgame, setEndGame] = useState(false)\n\n  \n\n//useeffects\nuseEffect(() => {\n  setCards(initializeDeck())\n}, [])\n\n\n// this Effect checks on fails and solved to check for a win or lose\nuseEffect(() => {\n  if (fails > 4) { \n    EndGame('lose');\n    setEndGame(true)\n  } else if (solved.length > 1 && solved.length === cards.length) {\n    EndGame('win');\n    setEndGame(true)\n  }\n}, [fails, solved.length, cards.length]);\n\n\n\n\n\n//functions\n  const handleClick = (id) => {\n    setDisabled(true)\n    if (flipped.length === 0){\n      setFlipped([id])\n      setDisabled(false)\n    } else {\n      if (sameCardClicked(id)) return\n      setFlipped([flipped[0], id])\n      if (isMatch(id)) {\n        setSolved([...solved, flipped[0], id])\n        setFlipped([])\n        resetCards()\n      } else {\n        setTimeout(resetCards, 600)\n        setFails(fails + 1);\n      }\n    } \n  }\n\n  const resetCards = () => {\n    setFlipped([])\n    setDisabled(false)\n  }\n\n  const sameCardClicked = (id) => flipped.includes(id)\n\n  const isMatch = (id) => {\n    const clickedCard = cards.find(card => card.id === id)\n    const flippedCard = cards.find(card => flipped[0] === card.id)\n    return flippedCard.type === clickedCard.type \n  }\n\n\n  return (\n    <div>\n      <Navbar \n      cards={cards}\n      setCards={setCards}\n      fails={fails}\n      setFails={setFails}\n      setFlipped={setFlipped}\n      setDisabled={setDisabled}\n      setSolved={setSolved}\n      setEndGame={setEndGame}\n      />\n      <Attempts \n      fails={fails}\n      setFails={setFails}\n      endgame={endgame}\n      />\n      <Board \n      cards={cards}\n      flipped={flipped}\n      setFlipped={setFlipped}\n      handleClick={handleClick}\n      disabled={disabled}\n      solved={solved}\n      endgame={endgame}\n      setEndGame={setEndGame}\n      />\n    </div>\n  )\n}\n\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}